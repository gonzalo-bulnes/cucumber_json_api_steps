# These steps are very similar to the Simple Token Authentication dummy
# app steps, however, all are custom steps and the files are not identical.
# See https://github.com/gonzalo-bulnes/simple_token_authentication/
#                blob/master/features/step_definitions/dummy_app_steps.rb
#

# Generate a basic dummy app using Rails API
# See https://github.com/rails-api/rails-api
Given /^I have a dummy app$/ do
  steps %Q{
    Given I cd to "../.."
    And a directory named "spec/dummy"
    And I run `rm -r ./spec/dummy`
    And The default aruba timeout is 30 seconds
    And I run `dummier`
    And I run `mv test/dummy spec/`
    And I run `rmdir test`
    And I cd to "spec/dummy"
    And I append to "Gemfile" with:
      """

      # Cucumber JSON API Steps

      gem 'cucumber_json_api_steps', path: '../../'

      group :development, :test do
        gem 'cucumber-rails', require: false
        gem 'database_cleaner', require: false
        gem 'mustache', require: false
        gem 'json_select', require: false
        gem 'rspec-rails', require: false
        gem 'factory_girl_rails', require: false
      end
      """
    And I overwrite "config/routes.rb" with:
      """
      Dummy::Application.routes.draw do
        mount CucumberJsonApiSteps::Engine => "/cucumber_json_api_steps"
      end
      """
    And I run `bundle install`

    And The default aruba timeout is 30 seconds
    And I run `rails generate cucumber:install` (skip in the dummy app context)
    And I run `rails generate rspec:install`
    And I append to ".rspec" with:
      """
      --format documentation
      """
    And a directory named "spec/support"
    And I write to "spec/support/factory_girl.rb" with:
      """
      require 'factory_girl_rails'
      """
    And a directory named "spec/factories"
  }
  puts """
  The dummy app was generated by Dummier.
  """
end

Given /^a scaffolded (\w+)$/ do |model|
  # Caution: model should be a singular camel-cased name but could be pluralized or underscored.
  steps %Q{
    And I run `rails generate scaffold #{model.underscore.singularize} title:string body:text --test-framework rspec --fixture-replacement factory_girl`
  }
end

Given /^I prepare the test database$/ do
  steps %{
    And I set the environment variables to:
      | RAILS_ENV | test |
    And I run `bundle exec rake db:drop`
    And I run `bundle exec rake db:create`
    And I run `bundle exec rake db:migrate`
  }
end

Given /^I run `rails generate cucumber:install` \(skip in the dummy app context\)$/ do
  # In te context of a Cucumber-generated dummy app, Cucumber is already available.
  # nop
end
